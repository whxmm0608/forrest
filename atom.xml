<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Forrest</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-27T03:39:04.661Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Forrest</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>浅析module.exports，exports，export，export default的区别</title>
    <link href="http://yoursite.com/2020/03/27/%E6%B5%85%E6%9E%90module.exports%EF%BC%8Cexports%EF%BC%8Cexport%EF%BC%8Cexport%20default%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://yoursite.com/2020/03/27/%E6%B5%85%E6%9E%90module.exports%EF%BC%8Cexports%EF%BC%8Cexport%EF%BC%8Cexport%20default%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2020-03-27T03:38:57.456Z</published>
    <updated>2020-03-27T03:39:04.661Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="引入：-require-import"><a href="#引入：-require-import" class="headerlink" title="引入： require / import"></a>引入： require / import</h1><h1 id="导出：export-module-exports-exports"><a href="#导出：export-module-exports-exports" class="headerlink" title="导出：export / module.exports / exports"></a>导出：export / module.exports / exports</h1><p>1.module.exports,exports同属于CommonJS模块规范。在NodeJs中,exports === module.exports，exports是module.exports的引用，于是exports指向的是module.exports，exports的方法可以直接调用。</p><p>所以你去直接令exports = xxx是没用的</p><p>原因如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(exports === <span class="built_in">module</span>.exports);<span class="comment">//true</span></span><br><span class="line"><span class="keyword">var</span> exports = <span class="built_in">module</span>.exports;<span class="comment">//node里面默认存在这句代码</span></span><br><span class="line">exports.name = <span class="string">'"swk"'</span>;</span><br><span class="line">exports.age = <span class="number">18</span>;</span><br><span class="line">exports.hello = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"hello Nodejs!"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>/**上面的代码等同于 */</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    name: <span class="string">'swk'</span>,</span><br><span class="line">    age: <span class="number">18</span>,</span><br><span class="line">    hello: <span class="function"><span class="keyword">function</span> (<span class="params">param</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'我是swk'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>//exports = xxx相当于修改exports指向的内存地址的对象，对module.exports毫无影响，所以在require(‘xxx’)的时候就会报错<br>// 在node中exports的作用只是辅助module.exports取数据，require(‘xxx’)实际上是从module.exports处取数据的<br>// 在js里面基本数据类型用栈存储，复杂数据类型用堆存储。一个对象它的引用地址保存在栈区，而对象本身保存在堆区，而这常常会导致很多问题<br>// exports.xxx = yyy属于CommonJS1的规范，而module.exports = zzz属于CommonJS2的规范</p><p>2.export与export default属于ES6 Module规范</p><p>总结：</p><p>Nodejs是基于CommonJS规范实现的，NodeJS不支持 import 和 export。</p><p>浏览器不支持CommonJS语法，所以需要用 Browserify 或 Webpack 等打包工具进行打包。Browserify 的原理其实就是实现了下面的变量。</p><p>浏览器不兼容CommonJS的根本原因在于缺少4个Node.js的环境变量：</p><p>module<br>exports<br>require<br>global<br>es6 兼容以上所有语法，当然需要 webpack + babel 来支撑。已经有浏览器支持es6语法。</p><p>尽管es6兼容以上所有语法，但需要注意：在webpack打包的时候，可以在js文件中混用 require 和 export。但是不能混用 import 以及 module.exports。</p><p>更详细的讲解可以查阅该博客：<a href="https://juejin.im/post/5badebedf265da0af609bdad，个人觉得不错" target="_blank" rel="noopener">https://juejin.im/post/5badebedf265da0af609bdad，个人觉得不错</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/03/27/hello-world/"/>
    <id>http://yoursite.com/2020/03/27/hello-world/</id>
    <published>2020-03-27T02:56:35.986Z</published>
    <updated>2020-03-27T06:49:31.345Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br>haha</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
